plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "4.4.1.3373"
	id "jacoco"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		xml.outputLocation = layout.buildDirectory.file("reports/jacoco/test/jacocoTestReport.xml")
		html.required = true  // HTML 리포트를 생성하도록 설정
		csv.required = false
	}
}




sonar {
	properties {
		property "sonar.projectKey", "jhk01007_aws_practice-backend"
		property "sonar.organization", "jhk01007"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", layout.buildDirectory.file("reports/jacoco/test/jacocoTestReport.xml")
	}
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	// https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk-s3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.767'



}

tasks.named('test') {
	useJUnitPlatform()
}

